// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "share.dev/routes"

func IndexPage(csrfToken string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<style>\n        .tab-content {\n            display: none;\n        }\n\n        .tab-content.is-active {\n            display: block;\n        }\n\n        .hero {\n            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        }\n    </style> <!-- Hero --> <section class=\"hero is-primary is-fullheight\"><div class=\"hero-head\"><nav class=\"navbar is-transparent\"><div class=\"container\"><div class=\"navbar-brand\"><a class=\"navbar-item\"><i class=\"fas fa-code-branch mr-2\"></i> <strong>Share.dev</strong></a></div></div></nav></div><div class=\"hero-body\"><div class=\"container\"><div class=\"columns is-vcentered\"><!-- Left side - Content --><div class=\"column is-6\"><h1 class=\"title is-1\">Connect with the world</h1><h2 class=\"subtitle is-4\">Share your thoughts and discover new perspectives</h2></div><!-- Right side - Auth Form --><div class=\"column is-6\"><div class=\"box\"><div class=\"tabs is-centered is-boxed\"><ul><li class=\"is-active\" data-target=\"login\"><a><span>Log In</span></a></li><li data-target=\"signup\"><a><span>Sign Up</span></a></li></ul></div><!-- Log In --><div id=\"login\" class=\"tab-content is-active\"><form hx-post=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(routes.Login)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/index.page.templ`, Line: 61, Col: 60}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "\" hx-target=\"#result\"><input type=\"hidden\" name=\"csrf_token\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(csrfToken)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/index.page.templ`, Line: 62, Col: 91}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "\"><div class=\"field\"><input class=\"input\" type=\"text\" name=\"login\" placeholder=\"Email or Username\" required></div><div class=\"field\"><input class=\"input\" type=\"password\" name=\"password\" placeholder=\"Password\" required></div><div class=\"field\"><button class=\"button is-link is-fullwidth\" type=\"submit\">Log In</button></div></form></div><!-- Sign Up --><div id=\"signup\" class=\"tab-content\"><form hx-post=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var5 string
			templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(routes.Signup)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/index.page.templ`, Line: 77, Col: 61}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\" hx-target=\"#result\"><input type=\"hidden\" name=\"csrf_token\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var6 string
			templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(csrfToken)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/index.page.templ`, Line: 78, Col: 91}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\"><div class=\"field\"><input class=\"input\" type=\"email\" name=\"email\" placeholder=\"Email\" required></div><div class=\"field\"><input class=\"input\" type=\"password\" name=\"password\" placeholder=\"Password\" minlength=\"8\" required><p class=\"help is-size-7\">Password must be at least 8 characters with uppercase, lowercase, number, and special character</p></div><div class=\"field\"><input class=\"input\" type=\"password\" name=\"confirm_password\" placeholder=\"Confirm Password\" minlength=\"8\" required></div><div class=\"field\"><button class=\"button is-primary is-fullwidth\" type=\"submit\">Create Account</button></div></form></div><div id=\"result\"></div></div></div></div></div></div></section><script>\n        // Tab switching\n        document.querySelectorAll('.tabs li').forEach(tab => {\n            tab.addEventListener('click', function () {\n                const target = this.dataset.target;\n\n                document.querySelectorAll('.tabs li').forEach(t => t.classList.remove('is-active'));\n                document.querySelectorAll('.tab-content').forEach(tc => tc.classList.remove('is-active'));\n\n                this.classList.add('is-active');\n                document.getElementById(target).classList.add('is-active');\n            });\n        });\n\n        // Password confirmation validation\n        document.addEventListener('DOMContentLoaded', function() {\n            const signupForm = document.querySelector('#signup form');\n            const password = signupForm.querySelector('input[name=\"password\"]');\n            const confirmPassword = signupForm.querySelector('input[name=\"confirm_password\"]');\n\n            function validatePasswordMatch() {\n                if (password.value && confirmPassword.value) {\n                    if (password.value !== confirmPassword.value) {\n                        confirmPassword.setCustomValidity('Passwords do not match');\n                        confirmPassword.classList.add('is-danger');\n                    } else {\n                        confirmPassword.setCustomValidity('');\n                        confirmPassword.classList.remove('is-danger');\n                    }\n                }\n            }\n\n            password.addEventListener('input', validatePasswordMatch);\n            confirmPassword.addEventListener('input', validatePasswordMatch);\n        });\n\n        // Loading states\n        document.body.addEventListener('htmx:beforeRequest', function (evt) {\n            evt.detail.elt.querySelector('button').classList.add('is-loading');\n        });\n\n        document.body.addEventListener('htmx:afterRequest', function (evt) {\n            evt.detail.elt.querySelector('button').classList.remove('is-loading');\n        });\n    </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Base("Share.dev - Connect and Share").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
